/////////////////////////////////////////
//                                     //
//             系统级别配置              //
//                                     //
/////////////////////////////////////////

// 配置文件当前版本，请勿更改！！！
format = 6

system {
	
	// 代理配置
	// 包括 HTTP 和 HTTPS 协议
	// 暂时仅支持设置全局且没有身份验证支持
	proxy {
		
		// 是否启用代理
		// 如果启用，iCee将会根据下列配置来连接代理
		// 当然你也可以选择不启用此处的代理而使用java虚拟机参数来设置
		enable: <<system.proxy.enable>>
		
		// 代理服务器地址
		host: <<system.proxy.host>>
		
		// 代理服务器端口，要求 0 ~ 65535
		port: <<system.proxy.port>>
		
		// 绕过代理的地址列表
		bypass: <<system.proxy.bypass>>
		
	}
	
	lang {
		
		// 系统默认输出语言
		default: zh_cn
		
		// 本地化调试模式
		// 如果此选项被设置为 true，
		// 所有通过 I18n.get() 方法获取的文本将会被转换为 `#{text%langTag.defineLocation}` 格式
		// 如下:
		//     false: This is a debug text for english
		//     true : #{This is a debug text for english%en_us.module:icee_overhead_test}
		// 这个选项是为了本地化翻译的开发所设置
		debug: <<system.lang.debug>>
		
	}
	
}
/////////////////////////////////////////
//                                     //
//              模块配置                //
//                                     //
/////////////////////////////////////////
module {
	
	/////////////////////////
	//        Bot          //
	/////////////////////////
	bot {
		
		// Discord Bot 组件
		discord {
			
			// 是否启用
			apply: <<module.bot.discord.apply>>
			
			// Discord 机器人访问令牌
			// 这个令牌是之前 Sukazyo 不小心把自己的 dc bot 令牌交上去了...
			// 嘛，当然已经重置了的
			token: "<<module.bot.discord.token>>"
			
		}
		
		// MiraiQQ 组件
		mirai {
			
			// 是否启用
			apply: <<module.bot.mirai.apply>>
			
			// 将要使用的 QQ 账号的 QQ号码 和 密码
			// 对了，或许有封号风险，反正谨慎使用
			qqid: <<module.bot.mirai.qqid>>
			password: "<<module.bot.mirai.password>>"
			
		}
		
	}
	
	// HTTP 监听器
	// 用于进行 API 数据传输
	http {
		
		// 是否启用
		apply: <<module.http.apply>>
		
		// 监听端口
		// 默认为颠倒过来看起来像 iceee~ 的 55571 (hae
		port: <<module.http.port>>
		
	}
	
}
